[
    "is_finish(loc)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.P , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.S , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.B , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.CUBE_RED , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.CUBE_BLUE , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.CUBE_GREEN , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.CUBE_BLACK , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.CUBE_BROWN , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.CUBE_PINK , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.CUBE_YELLOW , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.CUBE_GREY , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : shifted( (0,0) , lambda cell,o : cell_is_value( unity.Clicked , cell, o) , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.P , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.S , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.B , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.P , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.S , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.B , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.P , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.S , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.B , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , loc, s)",
    "at_action_cell( lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , loc, s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 1 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 5 , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.Clicked , lambda cell,o : is_around( 10 , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.CUBE_GREY , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_cell_with_value( unity.Clicked , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.P , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.S , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.B , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_RED , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLUE , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_GREEN , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BLACK , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_BROWN , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'WEST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_PINK , lambda cell,o : is_there_on( 'EAST' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'NORD' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BLACK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_BROWN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_PINK , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_YELLOW , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.CUBE_GREY , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'SOUTH' , unity.Clicked , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.P , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.S , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.B , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_RED , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLUE , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_GREEN , cell, o) , s)",
    "at_all_cell_with_value( unity.CUBE_YELLOW , lambda cell,o : is_there_on( 'WEST' , unity.CUBE_BLACK , cell, o) , s)"
]